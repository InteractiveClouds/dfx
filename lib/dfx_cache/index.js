const
    Q = require('q'),
    redis = require('redis'),
    client = redis.createClient();

exports.init = function ( o ) {
    const log = o.log;
    client.on('error', log.error.bind(log));
    if ( o.hasOwnProperty('selectDatabase') ) client.select(o.selectDatabase);
    exports.client = client;
    delete exports.init;
    return exports;
};

[
    'append',
    'auth',
    'bgrewriteaof',
    'bgsave',
    'bitcount',
    'bitfield',
    'bitop',
    'bitpos',
    'blpop',
    'brpop',
    'brpoplpush',
    'client',
    'cluster',
    'command',
    'config',
    'dbsize',
    'debug',
    'debug',
    'decr',
    'decrby',
    'del',
    'discard',
    'dump',
    'echo',
    'eval',
    'evalsha',
    'exec',
    'exists',
    'expire',
    'expireat',
    'flushall',
    'flushdb',
    'geoadd',
    'geohash',
    'geopos',
    'geodist',
    'georadius',
    'georadiusbymember',
    'get',
    'getbit',
    'getrange',
    'getset',
    'hdel',
    'hexists',
    'hget',
    'hgetall',
    'hincrby',
    'hincrbyfloat',
    'hkeys',
    'hlen',
    'hmget',
    'hmset',
    'hset',
    'hsetnx',
    'hstrlen',
    'hvals',
    'incr',
    'incrby',
    'incrbyfloat',
    'info',
    'keys',
    'lastsave',
    'lindex',
    'linsert',
    'llen',
    'lpop',
    'lpush',
    'lpushx',
    'lrange',
    'lrem',
    'lset',
    'ltrim',
    'mget',
    'migrate',
    'monitor',
    'move',
    'mset',
    'msetnx',
    'multi',
    'object',
    'persist',
    'pexpire',
    'pexpireat',
    'pfadd',
    'pfcount',
    'pfmerge',
    'ping',
    'psetex',
    'psubscribe',
    'pubsub',
    'pttl',
    'publish',
    'punsubscribe',
    'quit',
    'randomkey',
    'readonly',
    'readwrite',
    'rename',
    'renamenx',
    'restore',
    'role',
    'rpop',
    'rpoplpush',
    'rpush',
    'rpushx',
    'sadd',
    'save',
    'scard',
    'script',
    'sdiff',
    'sdiffstore',
    'select',
    'set',
    'setbit',
    'setex',
    'setnx',
    'setrange',
    'shutdown',
    'sinter',
    'sinterstore',
    'sismember',
    'slaveof',
    'slowlog',
    'smembers',
    'smove',
    'sort',
    'spop',
    'srandmember',
    'srem',
    'strlen',
    'subscribe',
    'sunion',
    'sunionstore',
    'sync',
    'time',
    'ttl',
    'type',
    'unsubscribe',
    'unwatch',
    'wait',
    'watch',
    'zadd',
    'zcard',
    'zcount',
    'zincrby',
    'zinterstore',
    'zlexcount',
    'zrange',
    'zrangebylex',
    'zrevrangebylex',
    'zrangebyscore',
    'zrank',
    'zrem',
    'zremrangebylex',
    'zremrangebyrank',
    'zremrangebyscore',
    'zrevrange',
    'zrevrangebyscore',
    'zrevrank',
    'zscore',
    'zunionstore',
    'scan',
    'sscan',
    'hscan',
    'zscan',
]
.forEach(function(name){
    client[name] = wrapWithPromise(client, client[name]);
});

function wrapWithPromise (context, func) {

    return function () {
        const
            D = Q.defer();
            args = Array.prototype.slice.call(arguments);

        args.push(function(error, data){
            error ? D.reject(error) : D.resolve(data)
        });

        func.apply(context, args)

        return D.promise;
    }
}
